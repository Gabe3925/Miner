
function preload() {

    game.load.image('cave', '<%= asset_path("cave.png") %>');
    game.load.image('stone', '<%= asset_path("stone.jpg") %>');
    game.load.spritesheet('miner', '<%= asset_path("axe.gif") %>', 32, 48);

}

var player;
var platforms;
var cursors;

var stars;
var score = 0;
var scoreText;

function create() {

    // //  A simple background for the mine
    // game.add.sprite(0, 0, 'cave');

    //  The rocks group is comprised of all the stones which make the mine wall
    rocks = game.add.group();

    // // Here we create the ground.
    // var boulder = rocks.create(0, game.world.height 64, 'stone');

    // //  Scale it to fit the width of the game (the original sprite is 400x32 in size)
    // ground.scale.setTo(2, 2);

    // //  This stops it from falling away when you jump on it
    // ground.body.immovable = true;

    //  Now let's create a rock
    var aRock = rocks.create(400, 400, 'stone');
    aRock.body.immovable = true;


    // The player and its settings
    player = game.add.sprite(32, game.world.height - 150, 'miner');

    // //  We need to enable physics on the player
    // game.physics.arcade.enable(player);

    // //  Player physics properties. Give the little guy a slight bounce.
    // player.body.bounce.y = 0.2;
    // player.body.gravity.y = 300;
    // player.body.collideWorldBounds = true;

    // //  Our two animations, walking left and right.
    // player.animations.add('left', [0, 1, 2, 3], 10, true);
    // player.animations.add('right', [5, 6, 7, 8], 10, true);

    // //  Finally some stars to collect
    // stars = game.add.group();

    // //  We will enable physics for any star that is created in this group
    // stars.enableBody = true;

    // //  Here we'll create 12 of them evenly spaced apart
    // for (var i = 0; i < 12; i++)
    // {
    //     //  Create a star inside of the 'stars' group
    //     var star = stars.create(i * 70, 0, 'star');

    //     //  Let gravity do its thing
    //     star.body.gravity.y = 300;

    //     //  This just gives each star a slightly random bounce value
    //     star.body.bounce.y = 0.7 + Math.random() * 0.2;
    // }

    //  The score
    scoreText = game.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });

    //  Our controls.
    cursors = game.input.keyboard.createCursorKeys();

}

function update() {

    // //  Collide the player and the stars with the platforms
    // game.physics.arcade.collide(player, platforms);
    // game.physics.arcade.collide(stars, platforms);

    // //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function
    // game.physics.arcade.overlap(player, stars, collectStar, null, this);

    // //  Reset the players velocity (movement)
    // player.body.velocity.x = 0;

//     if (cursors.left.isDown)
//     {
//         //  Move to the left
//         player.body.velocity.x = -150;

//         player.animations.play('left');
//     }
//     else if (cursors.right.isDown)
//     {
//         //  Move to the right
//         player.body.velocity.x = 150;

//         player.animations.play('right');
//     }
//     else
//     {
//         //  Stand still
//         player.animations.stop();

//         player.frame = 4;
//     }

//     //  Allow the player to jump if they are touching the ground.
//     if (cursors.up.isDown && player.body.touching.down)
//     {
//         player.body.velocity.y = -350;
//     }
 }

// function collectStar (player, star) {

//     // Removes the star from the screen
//     star.kill();

//     //  Add and update the score
//     score += 10;
//     scoreText.text = 'Score: ' + score;

// }
